name: Terraform CI/CD

on:
  push:
    paths:
      - 'modul8/**'
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./modul8

jobs:
  dev_stage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create Dev
        run: terraform workspace select Dev || terraform workspace new Dev
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply Dev
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Test Dev
        run: curl $(terraform output -raw primary_web_endpoint)
        working-directory: ${{ env.WORKING_DIR }}

  stage_prod:
    needs: dev_stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create stage
        run: terraform workspace select Stage || terraform workspace new Stage
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply Stage
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Test stage
        run: curl $(terraform output -raw primary_web_endpoint)
        working-directory: ${{ env.WORKING_DIR }}

  prod:
    needs: stage_prod
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: ${{ steps.get_web_endpoint.outputs.WEB_ENDPOINT }} # replace deploy_prod and web_url with actual output variables
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create Prod
        run: terraform workspace select Prod || terraform workspace new Prod
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply Prod
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

      - name: Test prod
        run: curl $(terraform output -raw primary_web_endpoint)
        working-directory: ${{ env.WORKING_DIR }}

      - name: Get Web Endpoint
        id: get_web_endpoint
        run: echo "WEB_ENDPOINT=$(terraform output -raw primary_web_endpoint)" 
        working-directory: ${{ env.WORKING_DIR }}
